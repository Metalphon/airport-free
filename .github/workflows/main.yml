# 工作流的名称
name: Sync Upstream Repo

# 触发工作流的事件
on:
  # 1. 定时任务：使用 Cron 语法
  schedule:
    # 每天的 UTC 时间 2 点和 14 点各运行一次 (对应北京时间 10 点和 22 点)
    - cron: '0 4 * * *'

  # 2. 手动触发：允许你在 Actions 页面手动点击 "Run workflow" 按钮
  workflow_dispatch:

# 定义工作任务
jobs:
  sync:
    # 使用最新的 Ubuntu 虚拟机环境
    runs-on: ubuntu-latest

    # 定义任务步骤
    steps:
      # 第一步：检出（Checkout）你的 Fork 仓库的代码
      - name: Checkout Fork
        uses: actions/checkout@v4
        with:
          # 为了后续步骤能推送代码，需要获取一个有写权限的 token
          # GITHUB_TOKEN 是 GitHub Actions 自动生成的，无需自己设置
          token: ${{ secrets.GITHUB_TOKEN }}

      # 第二步：执行同步脚本
      - name: Sync from Upstream
        run: |
          # 配置 Git 用户信息
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"

          # 添加源仓库（我们称之为 upstream）的远程地址
          # !!! 注意：把下面的 URL 换成你 Fork 的那个原始仓库的 URL
          git remote add upstream https://github.com/xiaoji235/airport-free.git

          # 从源仓库获取最新的代码
          git fetch upstream

          # 切换到你的主分支（可能是 main 或 master）
          # 你可以在你的仓库主页看到你的主分支名称
          git checkout main

          # 将源仓库的更新合并到你的主分支
          # 我们使用 rebase 策略以保持提交历史的整洁
          git rebase upstream/main

          # 将更新后的内容强制推送到你自己的 Fork 仓库
          git push origin main --force
